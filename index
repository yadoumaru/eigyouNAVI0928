<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>営業設計図ナビゲーター</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Hiragino Kaku Gothic ProN', 'Meiryo', sans-serif;
            background-color: #f7f8fc;
        }
        .screen {
            display: none;
            opacity: 0;
            transition: opacity 0.5s ease-in-out;
        }
        .screen.active {
            display: block;
            opacity: 1;
        }
        .asset-link {
            color: #2563eb;
            text-decoration: underline;
            cursor: pointer;
            font-weight: 600;
        }
        .asset-link:hover {
            color: #1d4ed8;
        }
        .btn-primary {
            background-color: #1e40af;
            color: white;
        }
        .btn-primary:hover {
            background-color: #1c3891;
        }
        .btn-secondary {
             background-color: #f1f5f9;
             color: #334155;
             border: 1px solid #cbd5e1;
        }
        .btn-secondary:hover {
            background-color: #e2e8f0;
        }
        .btn-choice {
            background-color: white;
            border: 1px solid #d1d5db;
            color: #374151;
            font-weight: 600;
            padding: 0.75rem;
            border-radius: 0.5rem;
            text-align: center;
            transition: all 0.2s ease;
            cursor: pointer;
        }
        .btn-choice.selected {
            border-color: #3b82f6;
            background-color: #eff6ff;
            color: #1d4ed8;
            box-shadow: 0 0 0 2px #3b82f6;
        }
         .flow-card {
            background-color: white;
            border: 1px solid #d1d5db;
            color: #374151;
            padding: 1.5rem;
            border-radius: 0.5rem;
            text-align: center;
            transition: all 0.2s ease;
            cursor: pointer;
        }
        .flow-card:hover {
             border-color: #3b82f6;
             background-color: #eff6ff;
             color: #1d4ed8;
        }
        .flow-card i {
             font-size: 1.5rem;
             margin-bottom: 0.75rem;
        }
        /* Modal styles */
        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 50; /* Sit on top */
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto; /* Enable scroll if needed */
            background-color: rgba(0,0,0,0.5); /* Black w/ opacity */
        }
        .modal-content {
            background-color: #fefefe;
            margin: 10% auto;
            padding: 2rem;
            border: 1px solid #888;
            width: 80%;
            max-width: 600px;
            border-radius: 0.5rem;
            box-shadow: 0 10px 25px -5px rgba(0,0,0,0.1), 0 10px 10px -5px rgba(0,0,0,0.04);
        }
        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
        .step-card-flow {
            transition: all 0.3s ease-in-out;
            opacity: 0;
            transform: translateY(20px);
        }
        .step-card-flow.active {
            opacity: 1;
            transform: translateY(0);
        }
    </style>
</head>
<body class="antialiased text-slate-700">

    <div id="app" class="container mx-auto p-4 md:p-8 max-w-4xl">
        <header class="text-center mb-10">
            <h1 class="text-3xl md:text-4xl font-bold text-slate-800">営業設計図ナビゲーター</h1>
            <p class="text-slate-500 mt-2">ターゲット企業に最適な営業フローを対話形式でナビゲートします。</p>
        </header>

        <!-- Screen 1: Company Info -->
        <div id="screen-1" class="screen active">
            <div class="bg-white p-6 rounded-lg shadow-md border border-slate-200">
                <h2 class="text-xl font-semibold mb-4 border-b pb-3 flex items-center"><i class="fas fa-building mr-3 text-blue-800"></i>STEP 1: 対象企業の情報を入力</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                    <div>
                        <label for="sales-scale" class="block text-sm font-medium text-slate-600">売上規模</label>
                        <select id="sales-scale" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option>1億円未満</option><option>1億～10億円</option><option>10億～50億円</option><option>50億円以上</option>
                        </select>
                    </div>
                    <div>
                        <label for="industry" class="block text-sm font-medium text-slate-600">業種</label>
                        <select id="industry" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option>BtoB</option><option>BtoC</option>
                        </select>
                    </div>
                    <div>
                        <label for="employees" class="block text-sm font-medium text-slate-600">社員数</label>
                        <select id="employees" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                           <option>10名未満</option><option>10名～50名</option><option>51名～300名</option><option>301名～1000名</option><option>1001名以上</option>
                        </select>
                    </div>
                    <div>
                        <label for="area" class="block text-sm font-medium text-slate-600">エリア</label>
                        <select id="area" class="mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-blue-500 focus:ring-blue-500">
                            <option>関東</option><option>関西</option><option>その他</option>
                        </select>
                    </div>
                </div>
                 <div class="mt-6 text-right">
                    <button id="goto-step2-btn" class="btn-primary py-2 px-6 rounded-md font-semibold transition">次へ <i class="fas fa-arrow-right ml-2"></i></button>
                </div>
            </div>
        </div>

        <!-- Screen 2: Product Selection -->
        <div id="screen-2" class="screen">
            <div class="bg-white p-6 rounded-lg shadow-md border border-slate-200">
                <h2 class="text-xl font-semibold mb-4 border-b pb-3 flex items-center"><i class="fas fa-box-open mr-3 text-blue-800"></i>STEP 2: フック商材を選択</h2>
                <div id="product-selection-grid" class="grid grid-cols-2 md:grid-cols-4 gap-3 mt-4">
                    <button class="btn-choice">四季報</button>
                    <button class="btn-choice">賢者本編</button>
                    <button class="btn-choice">ラボ</button>
                    <button class="btn-choice">アチーブメント</button>
                    <button class="btn-choice">新幹線</button>
                    <button class="btn-choice">球場看板</button>
                    <button class="btn-choice">屋外看板</button>
                    <button class="btn-choice">〇〇</button>
                    <button class="btn-choice">△△</button>
                </div>
                 <div class="mt-6 flex justify-between">
                    <button id="back-to-step1-btn" class="btn-secondary py-2 px-6 rounded-md font-semibold transition"><i class="fas fa-arrow-left mr-2"></i>戻る</button>
                    <button id="goto-step3-btn" class="btn-primary py-2 px-6 rounded-md font-semibold transition opacity-50 cursor-not-allowed" disabled>次へ <i class="fas fa-arrow-right ml-2"></i></button>
                </div>
            </div>
        </div>

        <!-- Screen 3: Pattern Selection -->
        <div id="screen-3" class="screen">
             <div class="bg-white p-6 rounded-lg shadow-md border border-slate-200">
                <h2 class="text-xl font-semibold mb-4 border-b pb-3 flex items-center"><i class="fas fa-route mr-3 text-blue-800"></i>STEP 3: 王道パターンを選択</h2>
                 <div id="pattern-selection-grid" class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-4">
                    <div data-flow="newList" class="flow-card"><i class="fas fa-list-ol text-blue-800"></i><h3 class="font-bold text-lg">王道① 新規リスト</h3></div>
                    <div data-flow="seasonal" class="flow-card"><i class="fas fa-calendar-alt text-blue-800"></i><h3 class="font-bold text-lg">王道② シーズナリー</h3></div>
                    <div data-flow="channel" class="flow-card"><i class="fas fa-network-wired text-blue-800"></i><h3 class="font-bold text-lg">王道③ チャネルリード</h3></div>
                    <div data-flow="media" class="flow-card"><i class="fas fa-user-friends text-blue-800"></i><h3 class="font-bold text-lg">王道④ 取材/コミュニティ</h3></div>
                 </div>
                 <div class="mt-6">
                     <button id="back-to-step2-btn" class="btn-secondary py-2 px-6 rounded-md font-semibold transition"><i class="fas fa-arrow-left mr-2"></i>戻る</button>
                 </div>
            </div>
        </div>
        
        <!-- Screen 4: Flowchart -->
        <div id="screen-4" class="screen">
            <div class="flex justify-between items-center mb-6">
                 <h2 id="flow-title" class="text-2xl font-bold text-slate-800"></h2>
                 <button id="reset-button" class="text-sm text-slate-500 hover:text-blue-600"><i class="fas fa-redo mr-1"></i>最初からやり直す</button>
            </div>
            <div id="flow-steps-container">
                <!-- Steps will be dynamically inserted here -->
            </div>
        </div>
    </div>

    <!-- Modal for Assets -->
    <div id="asset-modal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h3 id="modal-title" class="text-2xl font-bold mb-4">資料</h3>
            <div id="modal-body" class="text-slate-600 bg-slate-50 p-4 rounded-md border">
                ここに具体的な資料（メール文面、トークスクリプト等）の内容が表示されます。
            </div>
        </div>
    </div>


    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const screens = {
                '1': document.getElementById('screen-1'),
                '2': document.getElementById('screen-2'),
                '3': document.getElementById('screen-3'),
                '4': document.getElementById('screen-4'),
            };

            const flowTitle = document.getElementById('flow-title');
            const flowStepsContainer = document.getElementById('flow-steps-container');
            const modal = document.getElementById('asset-modal');
            const modalTitle = document.getElementById('modal-title');
            const modalBody = document.getElementById('modal-body');
            const closeButton = document.querySelector('.close-button');

            let appState = {
                selectedProduct: null,
                selectedFlow: null
            };

            const baseFlowLogic = {
                start: {
                    text: (product) => `フック商材「${product}」でアプローチします。方法は？`,
                    options: [ { text: 'infoメール', next: 'infoMail' }, { text: '追いかけ電話', next: 'followUpCall' } ]
                },
                infoMail: {
                    text: 'infoメールを送信しました。(<span class="asset-link" data-asset="infoMailTemplate">info文面リンク</span>) <br>返信はありましたか？',
                    options: [ { text: 'はい、返信あり', next: 'mailReplied' }, { text: 'いいえ、返信なし', next: 'mailNoReply' } ]
                },
                mailReplied: {
                    text: '素晴らしい！資料を送付し、電話でアポイントを打診しましょう。(<span class="asset-link" data-asset="followUpScript">追い電スクリプト</span>) <br>アポは取得できましたか？',
                    options: [{ text: 'はい、取得できた', next: 'appointment' }, { text: 'いいえ、資料送付のみ', next: 'sendMaterialOnly' }]
                },
                mailNoReply: { text: 'ニーズ分類に基づき、メール営業リストへ。(<span class="asset-link" data-asset="leadNurturing">ニーズ分類リスト</span>)', isEnd: true },
                followUpCall: {
                    text: '電話をかけます。(<span class="asset-link" data-asset="followUpScript">追い電スクリプト</span>) <br>アポは取得できましたか？',
                    options: [ { text: 'はい、取得できた', next: 'appointment' }, { text: 'いいえ、資料送付のみ', next: 'sendMaterialOnly' } ]
                },
                sendMaterialOnly: { text: '資料を送付しました。(<span class="asset-link" data-asset="materialTemplate">文面リンク</span>) <br>再度追いかけ電話をします。(<span class="asset-link" data-asset="followUpScriptAfterMaterial">追い電スクリプト</span>)', isEnd: true },
                appointment: {
                    text: 'アポ取得成功！面談を実施します。<br>面談で活用できる<span class="asset-link" data-asset="meeting_script">面談スクリプト</span>と<span class="asset-link" data-asset="meeting_presentation">面談時提示資料</span>はこちらです。<br><br>面談の結果、顧客の主なニーズは何でしたか？',
                    options: [ { text: 'IR', next: 'needs_ir' }, { text: '採用', next: 'needs_hr' }, { text: 'ブランディング/認知', next: 'needs_branding' }, { text: 'その他（インナー/販促）', next: 'needs_other' } ]
                },
                needs_ir: {
                    text: 'IRニーズのお客様です。<br>「トスアップ」または「イベント招待」で次のステップに進みましょう。',
                    options: [ { text: 'トスアップする', next: 'tossup' }, { text: 'イベントに招待する', next: 'event' } ],
                    assets: [{ name: '企画書(IR)', type: 'proposal_ir' }, { name: '事例資料(IR)', type: 'caseStudy_ir' }]
                },
                needs_hr: {
                    text: '採用ニーズのお客様です。<br>「トスアップ」または「イベント招待」で次のステップに進みましょう。',
                    options: [ { text: 'トスアップする', next: 'tossup' }, { text: 'イベントに招待する', next: 'event' } ],
                    assets: [{ name: '企画書(採用)', type: 'proposal_hr' }, { name: '事例資料(採用)', type: 'caseStudy_hr' }]
                },
                needs_branding: {
                    text: 'ブランディング/認知ニーズのお客様です。<br>「トスアップ」または「イベント招待」で次のステップに進みましょう。',
                    options: [ { text: 'トスアップする', next: 'tossup' }, { text: 'イベントに招待する', next: 'event' } ],
                    assets: [{ name: '企画書(ブランディング)', type: 'proposal_branding' }, { name: '事例資料(ブランディング)', type: 'caseStudy_branding' }]
                },
                needs_other: {
                    text: 'インナー/販促ニーズのお客様です。<br>「トスアップ」または「イベント招待」で次のステップに進みましょう。',
                    options: [ { text: 'トスアップする', next: 'tossup' }, { text: 'イベントに招待する', next: 'event' } ],
                    assets: [{ name: '企画書(その他)', type: 'proposal_other' }, { name: '事例資料(その他)', type: 'caseStudy_other' }]
                },
                tossup: { text: '役員へトスアップし、トップ営業でクロージングします。RC化、LTV最大化を目指しましょう。', isEnd: true },
                event: { text: 'イベントに招待し、役員との接点を創出します。イベント後、お礼訪問からトスアップに繋げましょう。', isEnd: true }
            };

            const flowTitles = {
                'newList': '王道① 新規リストへのアプローチ',
                'seasonal': '王道② シーズナリーサイクル',
                'channel': '王道③ チャネルリード',
                'media': '王道④ 取材/コミュニティ'
            };

            const navigateTo = (screenNumber) => {
                Object.values(screens).forEach(screen => screen.classList.remove('active'));
                screens[screenNumber].classList.add('active');
            };

            const startFlowchart = () => {
                flowStepsContainer.innerHTML = '';
                flowTitle.innerHTML = `${flowTitles[appState.selectedFlow]} <span class="text-base font-normal text-slate-500">(商材: ${appState.selectedProduct})</span>`;
                renderStep('start');
                navigateTo('4');
            };

            const renderStep = (stepKey) => {
                const stepData = baseFlowLogic[stepKey];
                if (!stepData) return;

                const stepElement = document.createElement('div');
                stepElement.className = 'step-card-flow bg-white p-6 rounded-lg shadow-md border border-slate-200 mb-6';
                
                let stepText = (typeof stepData.text === 'function') ? stepData.text(appState.selectedProduct) : stepData.text;

                let contentHTML = `<div class="text-lg mb-4">${stepText}</div>`;
                if (stepData.assets) {
                    contentHTML += `<div class="text-sm mt-4 border-t pt-3"><strong>関連資料:</strong><ul class="list-disc list-inside mt-2">`;
                    stepData.assets.forEach(asset => {
                        contentHTML += `<li><span class="asset-link" data-asset="${asset.type}">${asset.name}</span></li>`;
                    });
                    contentHTML += `</ul></div>`;
                }
                stepElement.innerHTML = contentHTML;

                if (!stepData.isEnd && stepData.options) {
                    const optionsContainer = document.createElement('div');
                    optionsContainer.className = 'flex flex-wrap gap-4 mt-4';
                    stepData.options.forEach(option => {
                        const button = document.createElement('button');
                        button.className = 'py-2 px-4 rounded-md font-semibold transition btn-secondary';
                        button.textContent = option.text;
                        button.dataset.next = option.next;
                        button.addEventListener('click', (e) => {
                             const parentCard = e.target.closest('.step-card-flow');
                            parentCard.querySelectorAll('button').forEach(btn => {
                                btn.disabled = true;
                                btn.classList.add('opacity-50', 'cursor-not-allowed');
                            });
                            e.target.classList.remove('btn-secondary');
                            e.target.classList.add('btn-primary');
                            renderStep(e.target.dataset.next);
                        });
                        optionsContainer.appendChild(button);
                    });
                    stepElement.appendChild(optionsContainer);
                }
                
                flowStepsContainer.appendChild(stepElement);
                setTimeout(() => stepElement.classList.add('active'), 10);
            };

            const openModal = (assetType) => {
                modalTitle.textContent = `資料: ${assetType}`;
                modalBody.innerHTML = `<p>これは「<strong>${assetType}</strong>」のプレースホルダーです。</p><p class="mt-4">実際のアプリケーションでは、ここに具体的なメール文面、トークスクリプト、企画書のテンプレート、または事例資料へのリンクなどが表示されます。</p>`;
                modal.style.display = 'block';
            };

            // Event Listeners Setup
            document.getElementById('goto-step2-btn').addEventListener('click', () => navigateTo('2'));
            document.getElementById('back-to-step1-btn').addEventListener('click', () => navigateTo('1'));
            document.getElementById('goto-step3-btn').addEventListener('click', () => navigateTo('3'));
            document.getElementById('back-to-step2-btn').addEventListener('click', () => navigateTo('2'));
            document.getElementById('reset-button').addEventListener('click', () => {
                appState.selectedProduct = null;
                appState.selectedFlow = null;
                navigateTo('1');
            });
            
            const productButtons = document.querySelectorAll('#product-selection-grid .btn-choice');
            const gotoStep3Btn = document.getElementById('goto-step3-btn');
            productButtons.forEach(button => {
                button.addEventListener('click', () => {
                    productButtons.forEach(btn => btn.classList.remove('selected'));
                    button.classList.add('selected');
                    appState.selectedProduct = button.textContent;
                    gotoStep3Btn.disabled = false;
                    gotoStep3Btn.classList.remove('opacity-50', 'cursor-not-allowed');
                });
            });

            document.querySelectorAll('#pattern-selection-grid .flow-card').forEach(card => {
                card.addEventListener('click', (e) => {
                    appState.selectedFlow = e.currentTarget.dataset.flow;
                    startFlowchart();
                });
            });

            closeButton.addEventListener('click', () => modal.style.display = 'none');
            window.addEventListener('click', (e) => { if (e.target === modal) modal.style.display = 'none'; });
            document.getElementById('app').addEventListener('click', (e) => {
                if(e.target.matches('.asset-link')) {
                    openModal(e.target.dataset.asset);
                }
            });

        });
    </script>
</body>
</html>

